# Dataset and dataloader parameters
dataset: 'nuScenes'
version: 'v1.0-trainval'
agent_setting: 'single_agent'
input_representation: 'graphs'

common_transform: &common_transform
  resize: [256, 256]
  to_tensor: true
  normalize:
    mean: [0.485, 0.456, 0.406]
    std: [0.229, 0.224, 0.225]

train_set_args: &ds_args
  split: 'train'
  t_h: 2
  t_f: 6
  map_extent: [ -50, 50, -20, 80 ]
  polyline_resolution: 1
  polyline_length: 20
  traversal_horizon: 15
  random_flips: True
  transform:
    <<: *common_transform

val_set_args:
  <<: *ds_args
  split: 'train_val'
  random_flips: False
  transform:
    <<: *common_transform

test_set_args:
  <<: *ds_args
  split: 'val'
  random_flips: False
  transform:
    <<: *common_transform

batch_size: 64
num_workers: 64


# Encoder parameters
encoder_type: 'pgp_visual_encoder'
encoder_args:
  resnet_channels: 512
  # Flattened RoI size = resnet_channels * roi_output_size^2
  roi_output_size: 7

  # Input to this MLP is Flattened RoI size
  # Last entry defines input size to visual GRU
  # Therefore this cannot be empty
  post_roi_mlp: [1024]

  # Input size to this GRU is the last of post_roi_mlp
  target_agent_vis_enc_size: 2048
  
  # MLP to fuse geometric and visual feats
  # Input size is target_agent_vis_enc_size + target_agent_enc_size
  # Output size is target_agent_enc_size
  # This just defines the hidden layers sizes, therefore it's valid to be empty
  geo_vis_fuse_mlp: []

  target_agent_feat_size: 5
  target_agent_emb_size: 16
  target_agent_enc_size: 32
  node_feat_size: 6
  node_emb_size: 16
  node_enc_size: 32
  nbr_feat_size: 5
  nbr_emb_size: 16
  nbr_enc_size: 32
  num_gat_layers: 2

# Aggregator parameters
aggregator_type: 'pgp'
aggregator_args:
  pre_train: False
  target_agent_enc_size: 32
  node_enc_size: 32
  pi_h1_size: 32
  pi_h2_size: 32
  horizon: 15
  num_samples: 1000
  emb_size: 128
  num_heads: 32


# Decoder parameters
decoder_type: 'lvm'
decoder_args:
  num_samples: 1000
  op_len: 12
  hidden_size: 128
  encoding_size: 160
  agg_type: 'sample_specific'
  lv_dim: 5
  num_clusters: 10


# Optimizer parameters
optim_args:
  lr: 0.001
  scheduler_step: 10
  scheduler_gamma: 0.5


losses: ['min_ade_k', 'pi_bc']
loss_weights: [1, 0.5]
loss_args:
  - k: 10
  - dummy: 0


tr_metrics: ['min_ade_k', 'miss_rate_k', 'pi_bc']
tr_metric_args:
  - k: 10
  - k: 10
    dist_thresh: 2
  - dummy: 0

val_metrics: ['min_ade_k','min_ade_k', 'miss_rate_k', 'miss_rate_k', 'pi_bc']
val_metric_args:
  - k: 5
  - k: 10
  - k: 5
    dist_thresh: 2
  - k: 10
    dist_thresh: 2
  - dummy: 0


log_freq: 100
